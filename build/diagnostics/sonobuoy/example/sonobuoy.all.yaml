---
apiVersion: v1
kind: Namespace
metadata:
  name: sonobuoy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
  namespace: sonobuoy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: sonobuoy
    namespace: sonobuoy
  name: sonobuoy-serviceaccount-sonobuoy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonobuoy-serviceaccount-sonobuoy
subjects:
  - kind: ServiceAccount
    name: sonobuoy-serviceaccount
    namespace: sonobuoy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: sonobuoy
    namespace: sonobuoy
  name: sonobuoy-serviceaccount-sonobuoy
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '/metrics'
      - '/logs'
      - '/logs/*'
    verbs:
      - 'get'
---
apiVersion: v1
data:
  config.json: |
    {"Description":"Sonobuoy diagnostics for KUDO instance zookeeper-instance","UUID":"bf7b63bb-55d1-4bba-9706-ac86a7df8212","Version":"v0.17.2","ResultsDir":"/tmp/sonobuoy","Resources":["apiservices","certificatesigningrequests","clusterrolebindings","clusterroles","componentstatuses","configmaps","controllerrevisions","cronjobs","customresourcedefinitions","daemonsets","deployments","endpoints","ingresses","jobs","leases","limitranges","mutatingwebhookconfigurations","namespaces","networkpolicies","nodes","persistentvolumeclaims","persistentvolumes","poddisruptionbudgets","pods","podlogs","podsecuritypolicies","podtemplates","priorityclasses","replicasets","replicationcontrollers","resourcequotas","rolebindings","roles","servergroups","serverversion","serviceaccounts","services","statefulsets","storageclasses","validatingwebhookconfigurations","volumeattachments","instances","operators","operatorversions"],"Filters":{"Namespaces":"default","LabelSelector":"kudo.dev/operator=zookeeper"},"Limits":{"PodLogs":{"Namespaces":"default","SonobuoyNamespace":true,"FieldSelectors":[],"LabelSelector":"kudo.dev/operator=zookeeper","Previous":false,"SinceSeconds":null,"SinceTime":null,"Timestamps":false,"TailLines":null,"LimitBytes":null,"LimitSize":"","LimitTime":""}},"QPS":30,"Burst":50,"Server":{"bindaddress":"0.0.0.0","bindport":8080,"advertiseaddress":"","timeoutseconds":10800},"Plugins":[{"name":"cmd-executor"}],"PluginSearchPath":["./plugins.d","/etc/sonobuoy/plugins.d","~/sonobuoy/plugins.d"],"Namespace":"sonobuoy","WorkerImage":"sonobuoy/sonobuoy:v0.17.2","ImagePullPolicy":"IfNotPresent","ImagePullSecrets":"","ProgressUpdatesPort":"8099"}
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-config-cm
  namespace: sonobuoy
---
apiVersion: v1
data:
  plugin-0.yaml: |
    podSpec:
      containers: []
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccountName: sonobuoy-serviceaccount
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: kubernetes.io/e2e-evict-taint-key
          operator: Exists
    sonobuoy-config:
      driver: Job
      plugin-name: cmd-executor
      result-format: raw
    spec:
      args:
        - copy
        - cat /conf/zoo.cfg
        - default
        - kudo.dev/operator=zookeeper
        - copy_zookeeper-configuration.txt
        - command
        - nslookup google.com
        - default
        - kudo.dev/operator=zookeeper
        - command_dns-information.txt
        - request
        - echo stat | nc zookeeper-instance-cs.default.svc.cluster.local 2181
        - request_cs-stat.txt
      command:
        - ./run.sh
      image: vvy/easy-sonobuoy-cmds:v0.1
      name: cmd-executor
      resources: {}
      volumeMounts:
        - mountPath: /tmp/results
          name: results
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-plugins-cm
  namespace: sonobuoy
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    component: sonobuoy
    run: sonobuoy-master
    tier: analysis
  name: sonobuoy
  namespace: sonobuoy
spec:
  containers:
    - env:
        - name: SONOBUOY_ADVERTISE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      image: sonobuoy/sonobuoy:v0.17.2
      imagePullPolicy: IfNotPresent
      name: kube-sonobuoy
      volumeMounts:
        - mountPath: /etc/sonobuoy
          name: sonobuoy-config-volume
        - mountPath: /plugins.d
          name: sonobuoy-plugins-volume
        - mountPath: /tmp/sonobuoy
          name: output-volume
  restartPolicy: Never
  serviceAccountName: sonobuoy-serviceaccount
  tolerations:
    - key: "kubernetes.io/e2e-evict-taint-key"
      operator: "Exists"
  volumes:
    - configMap:
        name: sonobuoy-config-cm
      name: sonobuoy-config-volume
    - configMap:
        name: sonobuoy-plugins-cm
      name: sonobuoy-plugins-volume
    - emptyDir: {}
      name: output-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: sonobuoy
    run: sonobuoy-master
  name: sonobuoy-master
  namespace: sonobuoy
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: sonobuoy-master
  type: ClusterIP

